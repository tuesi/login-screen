{"ast":null,"code":"import { createServer } from \"miragejs\";\nlet users = [{\n  id: 1,\n  email: \"labas@a\",\n  pass: \"abc\"\n}];\ncreateServer({\n  routes() {\n    this.namespace = \"api\";\n    this.post(\"/users\", (schema, request) => {\n      let attrs = JSON.parse(request.requestBody);\n      let user = attrs.user;\n      let pass = attrs.pass;\n      let status = false;\n\n      if (users.find(x => x.email === user)) {\n        var index = users.findIndex(x => x.email === user);\n\n        if (users[index].pass === attrs.pass) {\n          status = true;\n        }\n      }\n\n      return {\n        status: status\n      };\n    });\n  }\n\n});","map":{"version":3,"sources":["/Users/tadas/Desktop/SEEMS NEAT Task/login/src/fakeApi/server.js"],"names":["createServer","users","id","email","pass","routes","namespace","post","schema","request","attrs","JSON","parse","requestBody","user","status","find","x","index","findIndex"],"mappings":"AAAA,SAASA,YAAT,QAA6B,UAA7B;AAEA,IAAIC,KAAK,GAAG,CACR;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,KAAK,EAAE,SAAf;AAA0BC,EAAAA,IAAI,EAAE;AAAhC,CADQ,CAAZ;AAIAJ,YAAY,CAAC;AACTK,EAAAA,MAAM,GAAG;AACL,SAAKC,SAAL,GAAiB,KAAjB;AAEA,SAAKC,IAAL,CAAU,QAAV,EAAoB,CAACC,MAAD,EAASC,OAAT,KAAqB;AACrC,UAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,WAAnB,CAAZ;AACA,UAAIC,IAAI,GAAGJ,KAAK,CAACI,IAAjB;AACA,UAAIV,IAAI,GAAGM,KAAK,CAACN,IAAjB;AACA,UAAIW,MAAM,GAAG,KAAb;;AACA,UAAGd,KAAK,CAACe,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACd,KAAF,KAAYW,IAA5B,CAAH,EAAqC;AACjC,YAAII,KAAK,GAAGjB,KAAK,CAACkB,SAAN,CAAgBF,CAAC,IAAIA,CAAC,CAACd,KAAF,KAAYW,IAAjC,CAAZ;;AACA,YAAGb,KAAK,CAACiB,KAAD,CAAL,CAAad,IAAb,KAAsBM,KAAK,CAACN,IAA/B,EAAoC;AAChCW,UAAAA,MAAM,GAAG,IAAT;AACH;AACJ;;AACD,aAAO;AACHA,QAAAA,MAAM,EAAEA;AADL,OAAP;AAGH,KAdD;AAeH;;AAnBQ,CAAD,CAAZ","sourcesContent":["import { createServer } from \"miragejs\";\n\nlet users = [\n    {id: 1, email: \"labas@a\", pass: \"abc\"},\n]\n\ncreateServer({\n    routes() {\n        this.namespace = \"api\"\n\n        this.post(\"/users\", (schema, request) => {\n            let attrs = JSON.parse(request.requestBody);\n            let user = attrs.user;\n            let pass = attrs.pass;\n            let status = false;\n            if(users.find(x => x.email === user)){\n                var index = users.findIndex(x => x.email === user)\n                if(users[index].pass === attrs.pass){\n                    status = true;\n                }\n            }\n            return {\n                status: status\n            }\n        })\n    },\n})"]},"metadata":{},"sourceType":"module"}